{
  "language": "en",
  "ignoreWordsList": [
    "numpy",
    "regularization",
    "Args",
    "params",
    "len",
    "readlines",
    "LinearRegression",
    "LogisticRegression",
    "lambdas",
    "PolynomialRegression",
    "inp",
    "PolynomialLogisticRegression",
    "PolynomialLogisti",
    "exp",
    "RegressionModel",
    "args",
    "i",
    "is returned",
    "multiclass",
    "backpropagation",
    "randn",
    "notifier",
    "NeuralNetwork",
    "wg",
    "dJdb",
    "dJdW",
    "preprocessing",
    "rnd",
    "InitialParameters",
    "staticmethod",
    "FeatureScaling",
    "amax",
    "InputData",
    "classmethod",
    "cls",
    "normalizer",
    "preprocess",
    "linalg",
    "X1",
    "2 2",
    "degs",
    "matplotlib",
    "pyplot",
    "plt",
    "gcf",
    "mpl",
    "1d",
    "arange",
    "approximators",
    "approximator",
    "the approximation of",
    "linewidth",
    "2d",
    "colormap",
    "avr",
    "meshgrid",
    "contourf",
    "cmap",
    "levels levels",
    "pylearn",
    "sys",
    "mnist",
    "MNIST",
    "mndata",
    "time time",
    "nlist",
    "eps",
    "assertTrue",
    "LinearModel",
    "unittest",
    "TestCase",
    "PyLearn",
    "setuptools",
    "Iliya",
    "Zhechev",
    "ichko",
    "habala",
    "babala",
    "url",
    "TestC",
    "TestCost",
    "extende",
    "assertClose",
    "assertListsClose",
    "assertEqual",
    "assertListEqual",
    "assertSequenceEqual",
    "assertListsAlmostEqual",
    "assertAlmostEqual",
    "BaseTest",
    "3d",
    "4d",
    "k k",
    "TestHighOrderModel",
    "TestLinearodel",
    "TestLinearModel",
    "TestNeuralNetwork",
    "cols",
    "file file",
    "TestDataLoader",
    "StringIO",
    "n4",
    "n2",
    "TestMath",
    "TestPreprocessing",
    "list list",
    "px",
    "json",
    "asarray",
    "getdata",
    "image image",
    "imshow",
    "stdout"
  ],
  "mistakeTypeToStatus": {
    "Spelling": "Error",
    "Passive voice": "Hint",
    "Complex Expression": "Disable",
    "Hidden Verbs": "Information",
    "Hyphen Required": "Disable",
    "Redundant Expression": "Disable",
    "Did you mean...": "Disable",
    "Repeated Word": "Warning",
    "Missing apostrophe": "Warning",
    "Cliches": "Disable",
    "Missing Word": "Disable",
    "Make I uppercase": "Warning"
  },
  "languageIDs": [
    "markdown",
    "python",
    "py",
    "*.py",
    "plaintext"
  ],
  "ignoreRegExp": [
    "/\\(.*\\.(jpg|jpeg|png|md|gif|JPG|JPEG|PNG|MD|GIF)\\)/g",
    "/((http|https|ftp|git)\\S*)/g"
  ]
}